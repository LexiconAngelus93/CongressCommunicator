// Generated by view binder compiler. Do not edit!
package com.congress.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.congress.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnMakeCall;

  @NonNull
  public final Button btnSendEmail;

  @NonNull
  public final TextView memberChamber;

  @NonNull
  public final TextView memberEmail;

  @NonNull
  public final TextView memberName;

  @NonNull
  public final TextView memberOfficeAddress;

  @NonNull
  public final TextView memberParty;

  @NonNull
  public final TextView memberPhone;

  @NonNull
  public final TextView memberState;

  @NonNull
  public final TextView memberWebsite;

  @NonNull
  public final Toolbar toolbar;

  private ActivityContactDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnMakeCall, @NonNull Button btnSendEmail, @NonNull TextView memberChamber,
      @NonNull TextView memberEmail, @NonNull TextView memberName,
      @NonNull TextView memberOfficeAddress, @NonNull TextView memberParty,
      @NonNull TextView memberPhone, @NonNull TextView memberState, @NonNull TextView memberWebsite,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnMakeCall = btnMakeCall;
    this.btnSendEmail = btnSendEmail;
    this.memberChamber = memberChamber;
    this.memberEmail = memberEmail;
    this.memberName = memberName;
    this.memberOfficeAddress = memberOfficeAddress;
    this.memberParty = memberParty;
    this.memberPhone = memberPhone;
    this.memberState = memberState;
    this.memberWebsite = memberWebsite;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMakeCall;
      Button btnMakeCall = ViewBindings.findChildViewById(rootView, id);
      if (btnMakeCall == null) {
        break missingId;
      }

      id = R.id.btnSendEmail;
      Button btnSendEmail = ViewBindings.findChildViewById(rootView, id);
      if (btnSendEmail == null) {
        break missingId;
      }

      id = R.id.memberChamber;
      TextView memberChamber = ViewBindings.findChildViewById(rootView, id);
      if (memberChamber == null) {
        break missingId;
      }

      id = R.id.memberEmail;
      TextView memberEmail = ViewBindings.findChildViewById(rootView, id);
      if (memberEmail == null) {
        break missingId;
      }

      id = R.id.memberName;
      TextView memberName = ViewBindings.findChildViewById(rootView, id);
      if (memberName == null) {
        break missingId;
      }

      id = R.id.memberOfficeAddress;
      TextView memberOfficeAddress = ViewBindings.findChildViewById(rootView, id);
      if (memberOfficeAddress == null) {
        break missingId;
      }

      id = R.id.memberParty;
      TextView memberParty = ViewBindings.findChildViewById(rootView, id);
      if (memberParty == null) {
        break missingId;
      }

      id = R.id.memberPhone;
      TextView memberPhone = ViewBindings.findChildViewById(rootView, id);
      if (memberPhone == null) {
        break missingId;
      }

      id = R.id.memberState;
      TextView memberState = ViewBindings.findChildViewById(rootView, id);
      if (memberState == null) {
        break missingId;
      }

      id = R.id.memberWebsite;
      TextView memberWebsite = ViewBindings.findChildViewById(rootView, id);
      if (memberWebsite == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityContactDetailBinding((CoordinatorLayout) rootView, btnMakeCall,
          btnSendEmail, memberChamber, memberEmail, memberName, memberOfficeAddress, memberParty,
          memberPhone, memberState, memberWebsite, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
