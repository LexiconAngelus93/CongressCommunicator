// Generated by view binder compiler. Do not edit!
package com.congress.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.congress.app.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCallingBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final SwitchMaterial autoNavigateSwitch;

  @NonNull
  public final Button btnSelectAllCalls;

  @NonNull
  public final Button btnSelectRecipients;

  @NonNull
  public final Button btnStartCalls;

  @NonNull
  public final Button btnStopCalls;

  @NonNull
  public final Button btnStopTTS;

  @NonNull
  public final Button btnTestTTS;

  @NonNull
  public final MaterialCardView callLogCard;

  @NonNull
  public final RecyclerView callLogRecyclerView;

  @NonNull
  public final LinearProgressIndicator callProgressIndicator;

  @NonNull
  public final TextInputEditText callScriptEditText;

  @NonNull
  public final TextView callStatusText;

  @NonNull
  public final TextInputEditText callerIdEditText;

  @NonNull
  public final TextView currentNumberText;

  @NonNull
  public final LinearLayout progressLayout;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView recipientCountText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final LinearLayout ttsControlsLayout;

  @NonNull
  public final SwitchMaterial useTTSSwitch;

  private ActivityCallingBinding(@NonNull CoordinatorLayout rootView,
      @NonNull SwitchMaterial autoNavigateSwitch, @NonNull Button btnSelectAllCalls,
      @NonNull Button btnSelectRecipients, @NonNull Button btnStartCalls,
      @NonNull Button btnStopCalls, @NonNull Button btnStopTTS, @NonNull Button btnTestTTS,
      @NonNull MaterialCardView callLogCard, @NonNull RecyclerView callLogRecyclerView,
      @NonNull LinearProgressIndicator callProgressIndicator,
      @NonNull TextInputEditText callScriptEditText, @NonNull TextView callStatusText,
      @NonNull TextInputEditText callerIdEditText, @NonNull TextView currentNumberText,
      @NonNull LinearLayout progressLayout, @NonNull TextView progressText,
      @NonNull TextView recipientCountText, @NonNull Toolbar toolbar,
      @NonNull LinearLayout ttsControlsLayout, @NonNull SwitchMaterial useTTSSwitch) {
    this.rootView = rootView;
    this.autoNavigateSwitch = autoNavigateSwitch;
    this.btnSelectAllCalls = btnSelectAllCalls;
    this.btnSelectRecipients = btnSelectRecipients;
    this.btnStartCalls = btnStartCalls;
    this.btnStopCalls = btnStopCalls;
    this.btnStopTTS = btnStopTTS;
    this.btnTestTTS = btnTestTTS;
    this.callLogCard = callLogCard;
    this.callLogRecyclerView = callLogRecyclerView;
    this.callProgressIndicator = callProgressIndicator;
    this.callScriptEditText = callScriptEditText;
    this.callStatusText = callStatusText;
    this.callerIdEditText = callerIdEditText;
    this.currentNumberText = currentNumberText;
    this.progressLayout = progressLayout;
    this.progressText = progressText;
    this.recipientCountText = recipientCountText;
    this.toolbar = toolbar;
    this.ttsControlsLayout = ttsControlsLayout;
    this.useTTSSwitch = useTTSSwitch;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCallingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCallingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calling, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCallingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoNavigateSwitch;
      SwitchMaterial autoNavigateSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoNavigateSwitch == null) {
        break missingId;
      }

      id = R.id.btnSelectAllCalls;
      Button btnSelectAllCalls = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectAllCalls == null) {
        break missingId;
      }

      id = R.id.btnSelectRecipients;
      Button btnSelectRecipients = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectRecipients == null) {
        break missingId;
      }

      id = R.id.btnStartCalls;
      Button btnStartCalls = ViewBindings.findChildViewById(rootView, id);
      if (btnStartCalls == null) {
        break missingId;
      }

      id = R.id.btnStopCalls;
      Button btnStopCalls = ViewBindings.findChildViewById(rootView, id);
      if (btnStopCalls == null) {
        break missingId;
      }

      id = R.id.btnStopTTS;
      Button btnStopTTS = ViewBindings.findChildViewById(rootView, id);
      if (btnStopTTS == null) {
        break missingId;
      }

      id = R.id.btnTestTTS;
      Button btnTestTTS = ViewBindings.findChildViewById(rootView, id);
      if (btnTestTTS == null) {
        break missingId;
      }

      id = R.id.callLogCard;
      MaterialCardView callLogCard = ViewBindings.findChildViewById(rootView, id);
      if (callLogCard == null) {
        break missingId;
      }

      id = R.id.callLogRecyclerView;
      RecyclerView callLogRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (callLogRecyclerView == null) {
        break missingId;
      }

      id = R.id.callProgressIndicator;
      LinearProgressIndicator callProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (callProgressIndicator == null) {
        break missingId;
      }

      id = R.id.callScriptEditText;
      TextInputEditText callScriptEditText = ViewBindings.findChildViewById(rootView, id);
      if (callScriptEditText == null) {
        break missingId;
      }

      id = R.id.callStatusText;
      TextView callStatusText = ViewBindings.findChildViewById(rootView, id);
      if (callStatusText == null) {
        break missingId;
      }

      id = R.id.callerIdEditText;
      TextInputEditText callerIdEditText = ViewBindings.findChildViewById(rootView, id);
      if (callerIdEditText == null) {
        break missingId;
      }

      id = R.id.currentNumberText;
      TextView currentNumberText = ViewBindings.findChildViewById(rootView, id);
      if (currentNumberText == null) {
        break missingId;
      }

      id = R.id.progressLayout;
      LinearLayout progressLayout = ViewBindings.findChildViewById(rootView, id);
      if (progressLayout == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.recipientCountText;
      TextView recipientCountText = ViewBindings.findChildViewById(rootView, id);
      if (recipientCountText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.ttsControlsLayout;
      LinearLayout ttsControlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (ttsControlsLayout == null) {
        break missingId;
      }

      id = R.id.useTTSSwitch;
      SwitchMaterial useTTSSwitch = ViewBindings.findChildViewById(rootView, id);
      if (useTTSSwitch == null) {
        break missingId;
      }

      return new ActivityCallingBinding((CoordinatorLayout) rootView, autoNavigateSwitch,
          btnSelectAllCalls, btnSelectRecipients, btnStartCalls, btnStopCalls, btnStopTTS,
          btnTestTTS, callLogCard, callLogRecyclerView, callProgressIndicator, callScriptEditText,
          callStatusText, callerIdEditText, currentNumberText, progressLayout, progressText,
          recipientCountText, toolbar, ttsControlsLayout, useTTSSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
